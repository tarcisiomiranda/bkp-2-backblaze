name: Build & Release

permissions:
  contents: write
  actions: read
  id-token: write

on:
  push:
    tags: ['v*']
    branches: ['main']
  workflow_dispatch: {}

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env file
        run: |
          echo "GITHUB_TOKEN=${{ secrets.RELEASE_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}" >> .env
          echo "GITHUB_ACTOR=${{ github.actor }}" >> .env
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> .env

      - name: Debug environment
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_SERVER_URL: $GITHUB_SERVER_URL"
          git tag --list | tail -5
          echo "Available Invoke tasks:"
          python -m invoke -l

      - name: Pull Docker images
        run: python -m invoke pull-images

      - name: Run release script
        run: python .github/scripts/release.py
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF_TYPE: ${{ github.ref_type }}
          GITHUB_REF: ${{ github.ref }}
          GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
